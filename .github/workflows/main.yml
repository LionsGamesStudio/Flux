name: Flux Framework CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Flux Tests
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout your repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true  # Enable Git LFS if your project uses it
      
      # Step 2: Cache Unity Library files
      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('ProjectSettings/**', 'Packages/**') }}
          restore-keys: |
            Library-${{ runner.os }}-
            Library-
      
      # Step 3: Run custom test method
      - name: Run Flux Tests
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # Specify Unity version
          unityVersion: '2022.3.10f1'
          
          # Explicitly specify the project path
          projectPath: .
          
          # Target platform
          targetPlatform: StandaloneLinux64
          
          # Use executeMethod to specify the method to run
          executeMethod: FluxFramework.Testing.FluxTestRunnerCli.RunTests
          
          # Additional build arguments
          customParameters: '-nographics -batchmode -quit -logFile -'
      
      # Step 4: Upload test logs on failure
      - name: Upload Test Logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-execution-logs
          path: |
            ./*.log
            ./Logs/*.log
            ./artifacts/*.log
          retention-days: 7